/*this file is auto_generated by volk_register.py*/


#ifndef INCLUDED_VOLK_REGISTRY_H
#define INCLUDED_VOLK_REGISTRY_H

#include<volk/volk_config.h>
#include<volk/volk_config_fixed.h>
#ifdef __cplusplus
extern "C" {
#endif

#if LV_HAVE_GENERIC
#define LV_GENERIC_CNT 1
#else
#define LV_GENERIC_CNT 0
#endif /*LV_HAVE_GENERIC*/

#if LV_HAVE_ORC
#define LV_ORC_CNT 1
#else
#define LV_ORC_CNT 0
#endif /*LV_HAVE_ORC*/

#if LV_HAVE_ALTIVEC
#define LV_ALTIVEC_CNT 1
#else
#define LV_ALTIVEC_CNT 0
#endif /*LV_HAVE_ALTIVEC*/

#if LV_HAVE_32
#define LV_32_CNT 1
#else
#define LV_32_CNT 0
#endif /*LV_HAVE_32*/

#if LV_HAVE_64
#define LV_64_CNT 1
#else
#define LV_64_CNT 0
#endif /*LV_HAVE_64*/

#if LV_HAVE_3DNOW
#define LV_3DNOW_CNT 1
#else
#define LV_3DNOW_CNT 0
#endif /*LV_HAVE_3DNOW*/

#if LV_HAVE_ABM
#define LV_ABM_CNT 1
#else
#define LV_ABM_CNT 0
#endif /*LV_HAVE_ABM*/

#if LV_HAVE_POPCOUNT
#define LV_POPCOUNT_CNT 1
#else
#define LV_POPCOUNT_CNT 0
#endif /*LV_HAVE_POPCOUNT*/

#if LV_HAVE_MMX
#define LV_MMX_CNT 1
#else
#define LV_MMX_CNT 0
#endif /*LV_HAVE_MMX*/

#if LV_HAVE_SSE
#define LV_SSE_CNT 1
#else
#define LV_SSE_CNT 0
#endif /*LV_HAVE_SSE*/

#if LV_HAVE_SSE2
#define LV_SSE2_CNT 1
#else
#define LV_SSE2_CNT 0
#endif /*LV_HAVE_SSE2*/

#if LV_HAVE_SSE3
#define LV_SSE3_CNT 1
#else
#define LV_SSE3_CNT 0
#endif /*LV_HAVE_SSE3*/

#if LV_HAVE_SSSE3
#define LV_SSSE3_CNT 1
#else
#define LV_SSSE3_CNT 0
#endif /*LV_HAVE_SSSE3*/

#if LV_HAVE_SSE4_A
#define LV_SSE4_A_CNT 1
#else
#define LV_SSE4_A_CNT 0
#endif /*LV_HAVE_SSE4_A*/

#if LV_HAVE_SSE4_1
#define LV_SSE4_1_CNT 1
#else
#define LV_SSE4_1_CNT 0
#endif /*LV_HAVE_SSE4_1*/

#if LV_HAVE_SSE4_2
#define LV_SSE4_2_CNT 1
#else
#define LV_SSE4_2_CNT 0
#endif /*LV_HAVE_SSE4_2*/

#if LV_HAVE_AVX
#define LV_AVX_CNT 1
#else
#define LV_AVX_CNT 0
#endif /*LV_HAVE_AVX*/

static const int volk_16i_x5_add_quad_16i_x4_a16_arch_defs[] = {
 (LV_SSE2_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE2
 (1 << LV_SSE2),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_16i_branch_4_state_8_a16_arch_defs[] = {
 (LV_SSSE3_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSSE3
 (1 << LV_SSSE3),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_16ic_deinterleave_16i_x2_a16_arch_defs[] = {
 (LV_SSSE3_CNT) +  (LV_SSE2_CNT) +  (LV_GENERIC_CNT) +  (LV_ORC_CNT),
#if LV_HAVE_SSSE3
 (1 << LV_SSSE3),
#endif
#if LV_HAVE_SSE2
 (1 << LV_SSE2),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC),
#endif
#if LV_HAVE_ORC
 (1 << LV_ORC)
#endif
};

static const int volk_16ic_s32f_deinterleave_32f_x2_a16_arch_defs[] = {
 (LV_SSE_CNT) +  (LV_GENERIC_CNT) +  (LV_ORC_CNT),
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC),
#endif
#if LV_HAVE_ORC
 (1 << LV_ORC)
#endif
};

static const int volk_16ic_deinterleave_real_16i_a16_arch_defs[] = {
 (LV_SSSE3_CNT) +  (LV_SSE2_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSSE3
 (1 << LV_SSSE3),
#endif
#if LV_HAVE_SSE2
 (1 << LV_SSE2),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_16ic_s32f_deinterleave_real_32f_a16_arch_defs[] = {
 (LV_SSE4_1_CNT) +  (LV_SSE_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE4_1
 (1 << LV_SSE4_1),
#endif
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_16ic_deinterleave_real_8i_a16_arch_defs[] = {
 (LV_SSSE3_CNT) +  (LV_GENERIC_CNT) +  (LV_ORC_CNT),
#if LV_HAVE_SSSE3
 (1 << LV_SSSE3),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC),
#endif
#if LV_HAVE_ORC
 (1 << LV_ORC)
#endif
};

static const int volk_16ic_magnitude_16i_a16_arch_defs[] = {
 (LV_SSE3_CNT) +  (LV_SSE_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE3
 (1 << LV_SSE3),
#endif
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_16ic_s32f_magnitude_32f_a16_arch_defs[] = {
 (LV_SSE3_CNT) +  (LV_SSE_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE3
 (1 << LV_SSE3),
#endif
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_16i_s32f_convert_32f_a16_arch_defs[] = {
 (LV_SSE4_1_CNT) +  (LV_SSE_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE4_1
 (1 << LV_SSE4_1),
#endif
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_16i_s32f_convert_32f_u_arch_defs[] = {
 (LV_SSE4_1_CNT) +  (LV_SSE_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE4_1
 (1 << LV_SSE4_1),
#endif
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_16i_convert_8i_a16_arch_defs[] = {
 (LV_SSE2_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE2
 (1 << LV_SSE2),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_16i_convert_8i_u_arch_defs[] = {
 (LV_SSE2_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE2
 (1 << LV_SSE2),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_16i_max_star_16i_a16_arch_defs[] = {
 (LV_SSSE3_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSSE3
 (1 << LV_SSSE3),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_16i_max_star_horizontal_16i_a16_arch_defs[] = {
 (LV_SSSE3_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSSE3
 (1 << LV_SSSE3),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_16i_permute_and_scalar_add_a16_arch_defs[] = {
 (LV_SSE2_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE2
 (1 << LV_SSE2),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_16i_x4_quad_max_star_16i_a16_arch_defs[] = {
 (LV_SSE2_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE2
 (1 << LV_SSE2),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_16u_byteswap_a16_arch_defs[] = {
 (LV_SSE2_CNT) +  (LV_GENERIC_CNT) +  (LV_ORC_CNT),
#if LV_HAVE_SSE2
 (1 << LV_SSE2),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC),
#endif
#if LV_HAVE_ORC
 (1 << LV_ORC)
#endif
};

static const int volk_32f_accumulator_s32f_a16_arch_defs[] = {
 (LV_SSE_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_32f_x2_add_32f_a16_arch_defs[] = {
 (LV_SSE_CNT) +  (LV_GENERIC_CNT) +  (LV_ORC_CNT),
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC),
#endif
#if LV_HAVE_ORC
 (1 << LV_ORC)
#endif
};

static const int volk_32fc_32f_multiply_32fc_a16_arch_defs[] = {
 (LV_SSE_CNT) +  (LV_GENERIC_CNT) +  (LV_ORC_CNT),
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC),
#endif
#if LV_HAVE_ORC
 (1 << LV_ORC)
#endif
};

static const int volk_32fc_s32f_power_32fc_a16_arch_defs[] = {
 (LV_SSE_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_32f_s32f_calc_spectral_noise_floor_32f_a16_arch_defs[] = {
 (LV_SSE_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_32fc_s32f_atan2_32f_a16_arch_defs[] = {
 (LV_SSE4_1_CNT) +  (LV_SSE_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE4_1
 (1 << LV_SSE4_1),
#endif
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_32fc_x2_conjugate_dot_prod_32fc_a16_arch_defs[] = {
 (LV_GENERIC_CNT) +  (LV_SSE_CNT * LV_64_CNT) +  (LV_SSE_CNT * LV_32_CNT),
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC),
#endif
#if LV_HAVE_SSE && LV_HAVE_64
 (1 << LV_SSE) + (1 << LV_64),
#endif
#if LV_HAVE_SSE && LV_HAVE_32
 (1 << LV_SSE) + (1 << LV_32)
#endif
};

static const int volk_32fc_x2_conjugate_dot_prod_32fc_u_arch_defs[] = {
 (LV_GENERIC_CNT) +  (LV_SSE3_CNT),
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC),
#endif
#if LV_HAVE_SSE3
 (1 << LV_SSE3)
#endif
};

static const int volk_32fc_deinterleave_32f_x2_a16_arch_defs[] = {
 (LV_SSE_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_32fc_deinterleave_64f_x2_a16_arch_defs[] = {
 (LV_SSE2_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE2
 (1 << LV_SSE2),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_32fc_s32f_deinterleave_real_16i_a16_arch_defs[] = {
 (LV_SSE_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_32fc_deinterleave_real_32f_a16_arch_defs[] = {
 (LV_SSE_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_32fc_deinterleave_real_64f_a16_arch_defs[] = {
 (LV_SSE2_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE2
 (1 << LV_SSE2),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_32fc_x2_dot_prod_32fc_a16_arch_defs[] = {
 (LV_GENERIC_CNT) +  (LV_SSE_CNT * LV_64_CNT) +  (LV_SSE_CNT * LV_32_CNT) +  (LV_SSE3_CNT) +  (LV_SSE4_1_CNT),
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC),
#endif
#if LV_HAVE_SSE && LV_HAVE_64
 (1 << LV_SSE) + (1 << LV_64),
#endif
#if LV_HAVE_SSE && LV_HAVE_32
 (1 << LV_SSE) + (1 << LV_32),
#endif
#if LV_HAVE_SSE3
 (1 << LV_SSE3),
#endif
#if LV_HAVE_SSE4_1
 (1 << LV_SSE4_1)
#endif
};

static const int volk_32fc_index_max_16u_a16_arch_defs[] = {
 (LV_SSE3_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE3
 (1 << LV_SSE3),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_32fc_s32f_magnitude_16i_a16_arch_defs[] = {
 (LV_SSE3_CNT) +  (LV_SSE_CNT) +  (LV_GENERIC_CNT) +  (LV_ORC_CNT),
#if LV_HAVE_SSE3
 (1 << LV_SSE3),
#endif
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC),
#endif
#if LV_HAVE_ORC
 (1 << LV_ORC)
#endif
};

static const int volk_32fc_magnitude_32f_a16_arch_defs[] = {
 (LV_SSE3_CNT) +  (LV_SSE_CNT) +  (LV_GENERIC_CNT) +  (LV_ORC_CNT),
#if LV_HAVE_SSE3
 (1 << LV_SSE3),
#endif
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC),
#endif
#if LV_HAVE_ORC
 (1 << LV_ORC)
#endif
};

static const int volk_32fc_x2_multiply_32fc_a16_arch_defs[] = {
 (LV_SSE3_CNT) +  (LV_GENERIC_CNT) +  (LV_ORC_CNT),
#if LV_HAVE_SSE3
 (1 << LV_SSE3),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC),
#endif
#if LV_HAVE_ORC
 (1 << LV_ORC)
#endif
};

static const int volk_32f_s32f_convert_16i_a16_arch_defs[] = {
 (LV_SSE2_CNT) +  (LV_SSE_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE2
 (1 << LV_SSE2),
#endif
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_32f_s32f_convert_16i_u_arch_defs[] = {
 (LV_SSE2_CNT) +  (LV_SSE_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE2
 (1 << LV_SSE2),
#endif
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_32f_s32f_convert_32i_a16_arch_defs[] = {
 (LV_SSE2_CNT) +  (LV_SSE_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE2
 (1 << LV_SSE2),
#endif
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_32f_s32f_convert_32i_u_arch_defs[] = {
 (LV_SSE2_CNT) +  (LV_SSE_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE2
 (1 << LV_SSE2),
#endif
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_32f_convert_64f_a16_arch_defs[] = {
 (LV_SSE2_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE2
 (1 << LV_SSE2),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_32f_convert_64f_u_arch_defs[] = {
 (LV_SSE2_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE2
 (1 << LV_SSE2),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_32f_s32f_convert_8i_a16_arch_defs[] = {
 (LV_SSE2_CNT) +  (LV_SSE_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE2
 (1 << LV_SSE2),
#endif
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_32f_s32f_convert_8i_u_arch_defs[] = {
 (LV_SSE2_CNT) +  (LV_SSE_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE2
 (1 << LV_SSE2),
#endif
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_32fc_s32f_x2_power_spectral_density_32f_a16_arch_defs[] = {
 (LV_SSE3_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE3
 (1 << LV_SSE3),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_32fc_s32f_power_spectrum_32f_a16_arch_defs[] = {
 (LV_SSE3_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE3
 (1 << LV_SSE3),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_32fc_x2_square_dist_32f_a16_arch_defs[] = {
 (LV_SSE3_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE3
 (1 << LV_SSE3),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_32fc_x2_s32f_square_dist_scalar_mult_32f_a16_arch_defs[] = {
 (LV_SSE3_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE3
 (1 << LV_SSE3),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_32f_x2_divide_32f_a16_arch_defs[] = {
 (LV_SSE_CNT) +  (LV_GENERIC_CNT) +  (LV_ORC_CNT),
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC),
#endif
#if LV_HAVE_ORC
 (1 << LV_ORC)
#endif
};

static const int volk_32f_x2_dot_prod_32f_a16_arch_defs[] = {
 (LV_GENERIC_CNT) +  (LV_SSE_CNT) +  (LV_SSE3_CNT) +  (LV_SSE4_1_CNT),
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC),
#endif
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_SSE3
 (1 << LV_SSE3),
#endif
#if LV_HAVE_SSE4_1
 (1 << LV_SSE4_1)
#endif
};

static const int volk_32f_x2_dot_prod_32f_u_arch_defs[] = {
 (LV_GENERIC_CNT) +  (LV_SSE_CNT) +  (LV_SSE3_CNT) +  (LV_SSE4_1_CNT),
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC),
#endif
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_SSE3
 (1 << LV_SSE3),
#endif
#if LV_HAVE_SSE4_1
 (1 << LV_SSE4_1)
#endif
};

static const int volk_32f_s32f_32f_fm_detect_32f_a16_arch_defs[] = {
 (LV_SSE_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_32f_index_max_16u_a16_arch_defs[] = {
 (LV_SSE4_1_CNT) +  (LV_SSE_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE4_1
 (1 << LV_SSE4_1),
#endif
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_32f_x2_s32f_interleave_16ic_a16_arch_defs[] = {
 (LV_SSE2_CNT) +  (LV_SSE_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE2
 (1 << LV_SSE2),
#endif
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_32f_x2_interleave_32fc_a16_arch_defs[] = {
 (LV_SSE_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_32f_x2_max_32f_a16_arch_defs[] = {
 (LV_SSE_CNT) +  (LV_GENERIC_CNT) +  (LV_ORC_CNT),
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC),
#endif
#if LV_HAVE_ORC
 (1 << LV_ORC)
#endif
};

static const int volk_32f_x2_min_32f_a16_arch_defs[] = {
 (LV_SSE_CNT) +  (LV_GENERIC_CNT) +  (LV_ORC_CNT),
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC),
#endif
#if LV_HAVE_ORC
 (1 << LV_ORC)
#endif
};

static const int volk_32f_x2_multiply_32f_a16_arch_defs[] = {
 (LV_SSE_CNT) +  (LV_GENERIC_CNT) +  (LV_ORC_CNT),
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC),
#endif
#if LV_HAVE_ORC
 (1 << LV_ORC)
#endif
};

static const int volk_32f_s32f_normalize_a16_arch_defs[] = {
 (LV_SSE_CNT) +  (LV_GENERIC_CNT) +  (LV_ORC_CNT),
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC),
#endif
#if LV_HAVE_ORC
 (1 << LV_ORC)
#endif
};

static const int volk_32f_s32f_power_32f_a16_arch_defs[] = {
 (LV_SSE4_1_CNT) +  (LV_SSE_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE4_1
 (1 << LV_SSE4_1),
#endif
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_32f_sqrt_32f_a16_arch_defs[] = {
 (LV_SSE_CNT) +  (LV_GENERIC_CNT) +  (LV_ORC_CNT),
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC),
#endif
#if LV_HAVE_ORC
 (1 << LV_ORC)
#endif
};

static const int volk_32f_s32f_stddev_32f_a16_arch_defs[] = {
 (LV_SSE4_1_CNT) +  (LV_SSE_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE4_1
 (1 << LV_SSE4_1),
#endif
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_32f_stddev_and_mean_32f_x2_a16_arch_defs[] = {
 (LV_SSE4_1_CNT) +  (LV_SSE_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE4_1
 (1 << LV_SSE4_1),
#endif
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_32f_x2_subtract_32f_a16_arch_defs[] = {
 (LV_SSE_CNT) +  (LV_GENERIC_CNT) +  (LV_ORC_CNT),
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC),
#endif
#if LV_HAVE_ORC
 (1 << LV_ORC)
#endif
};

static const int volk_32f_x3_sum_of_poly_32f_a16_arch_defs[] = {
 (LV_SSE3_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE3
 (1 << LV_SSE3),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_32i_x2_and_32i_a16_arch_defs[] = {
 (LV_SSE_CNT) +  (LV_GENERIC_CNT) +  (LV_ORC_CNT),
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC),
#endif
#if LV_HAVE_ORC
 (1 << LV_ORC)
#endif
};

static const int volk_32i_s32f_convert_32f_a16_arch_defs[] = {
 (LV_SSE2_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE2
 (1 << LV_SSE2),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_32i_s32f_convert_32f_u_arch_defs[] = {
 (LV_SSE2_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE2
 (1 << LV_SSE2),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_32i_x2_or_32i_a16_arch_defs[] = {
 (LV_SSE_CNT) +  (LV_GENERIC_CNT) +  (LV_ORC_CNT),
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC),
#endif
#if LV_HAVE_ORC
 (1 << LV_ORC)
#endif
};

static const int volk_32u_byteswap_a16_arch_defs[] = {
 (LV_SSE2_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE2
 (1 << LV_SSE2),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_32u_popcnt_a16_arch_defs[] = {
 (LV_GENERIC_CNT) +  (LV_SSE4_2_CNT),
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC),
#endif
#if LV_HAVE_SSE4_2
 (1 << LV_SSE4_2)
#endif
};

static const int volk_64f_convert_32f_a16_arch_defs[] = {
 (LV_SSE2_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE2
 (1 << LV_SSE2),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_64f_convert_32f_u_arch_defs[] = {
 (LV_SSE2_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE2
 (1 << LV_SSE2),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_64f_x2_max_64f_a16_arch_defs[] = {
 (LV_SSE2_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE2
 (1 << LV_SSE2),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_64f_x2_min_64f_a16_arch_defs[] = {
 (LV_SSE2_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE2
 (1 << LV_SSE2),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_64u_byteswap_a16_arch_defs[] = {
 (LV_SSE2_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE2
 (1 << LV_SSE2),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_64u_popcnt_a16_arch_defs[] = {
 (LV_GENERIC_CNT) +  (LV_SSE4_2_CNT * LV_64_CNT),
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC),
#endif
#if LV_HAVE_SSE4_2 && LV_HAVE_64
 (1 << LV_SSE4_2) + (1 << LV_64)
#endif
};

static const int volk_8ic_deinterleave_16i_x2_a16_arch_defs[] = {
 (LV_SSE4_1_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE4_1
 (1 << LV_SSE4_1),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_8ic_s32f_deinterleave_32f_x2_a16_arch_defs[] = {
 (LV_SSE4_1_CNT) +  (LV_SSE_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE4_1
 (1 << LV_SSE4_1),
#endif
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_8ic_deinterleave_real_16i_a16_arch_defs[] = {
 (LV_SSE4_1_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE4_1
 (1 << LV_SSE4_1),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_8ic_s32f_deinterleave_real_32f_a16_arch_defs[] = {
 (LV_SSE4_1_CNT) +  (LV_SSE_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE4_1
 (1 << LV_SSE4_1),
#endif
#if LV_HAVE_SSE
 (1 << LV_SSE),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_8ic_deinterleave_real_8i_a16_arch_defs[] = {
 (LV_SSSE3_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSSE3
 (1 << LV_SSSE3),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_8ic_x2_multiply_conjugate_16ic_a16_arch_defs[] = {
 (LV_SSE4_1_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE4_1
 (1 << LV_SSE4_1),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_8ic_x2_s32f_multiply_conjugate_32fc_a16_arch_defs[] = {
 (LV_SSE4_1_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE4_1
 (1 << LV_SSE4_1),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_8i_convert_16i_a16_arch_defs[] = {
 (LV_SSE4_1_CNT) +  (LV_GENERIC_CNT) +  (LV_ORC_CNT),
#if LV_HAVE_SSE4_1
 (1 << LV_SSE4_1),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC),
#endif
#if LV_HAVE_ORC
 (1 << LV_ORC)
#endif
};

static const int volk_8i_convert_16i_u_arch_defs[] = {
 (LV_SSE4_1_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE4_1
 (1 << LV_SSE4_1),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

static const int volk_8i_s32f_convert_32f_a16_arch_defs[] = {
 (LV_SSE4_1_CNT) +  (LV_GENERIC_CNT) +  (LV_ORC_CNT),
#if LV_HAVE_SSE4_1
 (1 << LV_SSE4_1),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC),
#endif
#if LV_HAVE_ORC
 (1 << LV_ORC)
#endif
};

static const int volk_8i_s32f_convert_32f_u_arch_defs[] = {
 (LV_SSE4_1_CNT) +  (LV_GENERIC_CNT),
#if LV_HAVE_SSE4_1
 (1 << LV_SSE4_1),
#endif
#if LV_HAVE_GENERIC
 (1 << LV_GENERIC)
#endif
};

#ifdef __cplusplus
}
#endif
#endif /*INCLUDED_VOLK_REGISTRY_H*/
